{"mappings":"ACAA,MAAM,EAAU,SAAS,gBAAA,CAAiB,UACtC,CAAA,EAAQ,MAAA,CAAS,GACjB,AAGJ,WACI,IAAI,EAAc,EAElB,IAAK,IAAI,EAAQ,EAAG,EAAQ,EAAQ,MAAA,CAAQ,IAAQ,CAChD,IAAM,EAAS,CAAO,CAAC,EAAM,CAK7B,EAJW,GAMX,IAEG,AARQ,EAQD,SAAA,CAAU,QAAA,CAAS,eACzB,AAcR,SAAmB,CAAM,EACrB,IAAM,EAAc,EAAO,gBAAA,CAAiB,gBAC5C,IAAK,IAAI,EAAQ,EAAG,EAAQ,EAAY,MAAA,CAAQ,IAAS,CACrD,IAAM,EAAa,CAAW,CAAC,EAAM,CAuBzC,eAAe,EAAe,CAAK,CAAE,CAAM,EACvC,GAAI,CAAC,EAAO,SAAA,CAAU,QAAA,CAAS,mBAa3B,GAZO,UAAU,GAAA,CAAI,kBAEP,MAAM,MAAM,cAAc,CACpC,OAAQ,KAQZ,GACI,SAAS,EAAA,CAAI,CACb,IAAM,EAAS,MAAM,SAAS,IAA9B,GAEM,EAAY,EAAO,SAAzB,AAEA,CAAA,EAAY,SAAA,CAAY,EAExB,IAEA,EAAO,SAAA,CAAU,MAAA,CAAO,iBAC5B,MACI,MAAM,OAEN,EAAO,SAAA,CAAU,MAAA,CAAO,kBAGpC,CApDI,EAAW,gBAAA,CAAiB,cAAe,SAAU,CAAC,EAEtD,EAAe,GAEf,EAAqB,EAAW,KAAhC,CACJ,GACA,EAAW,gBAAA,CAAiB,YAAa,SAAS,CAAC,EAE/C,GACJ,GACA,EAAW,gBAAA,CAAiB,OAAQ,SAAU,CAAC,EAE3C,EAAe,GACX,EAAO,OAAA,CAAQ,IAAA,CAEf,EAAe,EAAW,KAAA,CAAO,IAGjC,EAAY,SAAA,CAAY,EAAQ,EAChC,IAER,EAgCJ,CACJ,EAjFmB,EACf,CAYA,SAAS,EAAe,CAAM,EAC1B,EAAe,EAAO,aAAA,CAAc,kBACpC,EAAc,EAAO,aAAA,CAAc,gBACvC,CAEA,SAAS,EAAqB,EAAQ,EAAY,SAAS,EAEvD,EAAa,KAAA,CAAM,KAAA,CAAQ,CAAC,EADF,EAAQ,IACc,CAAC,CAAC,AACtD,CA4DH","sources":["<anon>","src/js/rating.js"],"sourcesContent":["const ratings = document.querySelectorAll(\".rating\");\nif (ratings.length > 0) initRatings();\n//основная функция\nfunction initRatings() {\n    let ratingActive, ratingValue;\n    //бегаем по всем рейтингам\n    for(let index = 0; index < ratings.length; index++){\n        const rating = ratings[index];\n        initRating(rating);\n    }\n    //инициализируем конкретный рейтинг\n    function initRating(rating) {\n        initRatingVars(rating);\n        setRatingActiveWidth();\n        if (rating.classList.conteins(\"rating_set\")) setRating(rating);\n    }\n    //инициализация переменных\n    function initRatingVars(rating) {\n        ratingActive = rating.querySelector(\".rating_active\");\n        ratingValue = rating.querySelector(\".rating_value\");\n    }\n    //изминяем ширину активных звезд\n    function setRatingActiveWidth(index = ratingValue.innerHTML) {\n        const ratingActiveWidth = index / 0.05;\n        ratingActive.style.width = `${ratingActiveWidth}%`;\n    }\n    //возможность указать оценку\n    function setRating(rating) {\n        const ratingItems = rating.querySelectorAll(\".rating_item\");\n        for(let index = 0; index < ratingItems.length; index++){\n            const ratingItem = ratingItems[index];\n            ratingItem.addEventListener(\"mouseeenter\", function(e) {\n                //обновление переменных \n                initRatingVars(rating);\n                //обновление активных звезд\n                setRatingActiveWidth(ratingItem.value);\n            });\n            ratingItem.addEventListener(\"mouseleve\", function(e) {\n                //обновление активных звезд\n                setRatingActiveWidth();\n            });\n            ratingItem.addEventListener(\"clck\", function(e) {\n                //обновление переменных \n                initRatingVars(rating);\n                if (rating.dataset.ajax) //отправить на сервер\n                setRatingVelue(ratingItem.value, rating);\n                else {\n                    //отобразить указаную оценку\n                    ratingValue.innerHTML = index + 1;\n                    setRatingActiveWidth();\n                }\n            });\n            async function setRatingVelue(value, rating) {\n                if (!rating.classList.conteins(\"rating_sending\")) {\n                    classList.add(\"rating_sending\");\n                    //отправка данных (value) на сервер\n                    let respons = await fatch(\"rating.json\", {\n                        method: \"GET\"\n                    });\n                    if (Response.ok) {\n                        const result = await response.json();\n                        //получаем новый рейтинг\n                        const newRating = result.newRating;\n                        //вывод нового среднего результата\n                        ratingValue.innerHTML = newRating;\n                        //щбрщвление активных звезд\n                        setRatingActiveWidth();\n                        rating.classList.remove(\"rating_sending\");\n                    } else {\n                        alert(Error);\n                        rating.classList.remove(\"rating_sending\");\n                    }\n                }\n            }\n        }\n    }\n} // get push set \n // на бекенді отримати та змінити рейтинг\n // взяти клас кнопки  при кліку відкривати мою модалку(сlass=\"rating-btn\")\n // по кліку відправляются данні в бекенді//\n\n//# sourceMappingURL=index.700d9190.js.map\n","const ratings = document.querySelectorAll('.rating');\nif (ratings.length > 0) {\n    initRatings();\n}\n//основная функция\nfunction initRatings() {\n    let ratingActive, ratingValue; \n    //бегаем по всем рейтингам\n    for (let index = 0; index < ratings.length; index++){\n        const rating = ratings[index];\n        initRating(rating);\n    }\n    //инициализируем конкретный рейтинг\n    function initRating(rating){\n        initRatingVars(rating);\n        \n        setRatingActiveWidth();\n\n        if(rating.classList.conteins('rating_set')) {\n            setRating(rating);\n        }\n    }\n    //инициализация переменных\n    function initRatingVars(rating) {\n        ratingActive = rating.querySelector('.rating_active');\n        ratingValue = rating.querySelector('.rating_value');\n    }\n    //изминяем ширину активных звезд\n    function setRatingActiveWidth(index = ratingValue.innerHTML) {\n        const ratingActiveWidth = index / 0.05;\n        ratingActive.style.width = `${ratingActiveWidth}%`;\n    }\n    //возможность указать оценку\n    function setRating(rating) {\n        const ratingItems = rating.querySelectorAll('.rating_item');\n        for (let index = 0; index < ratingItems.length; index++) {\n            const ratingItem = ratingItems[index];\n            ratingItem.addEventListener(\"mouseeenter\", function (e) {\n            //обновление переменных \n            initRatingVars(rating);\n            //обновление активных звезд\n            setRatingActiveWidth(ratingItem.value);\n        });\n        ratingItem.addEventListener(\"mouseleve\", function(e) {\n            //обновление активных звезд\n            setRatingActiveWidth();\n        });\n        ratingItem.addEventListener(\"clck\", function (e) {\n            //обновление переменных \n            initRatingVars(rating);\n            if (rating.dataset.ajax) {\n                //отправить на сервер\n                setRatingVelue(ratingItem.value, rating);\n             } else {\n                //отобразить указаную оценку\n                ratingValue.innerHTML = index + 1;\n                setRatingActiveWidth();\n             }\n        });\n        async function setRatingVelue(value, rating) {\n            if (!rating.classList.conteins('rating_sending')) {\n                rating/classList.add('rating_sending');\n                //отправка данных (value) на сервер\n                let respons = await fatch('rating.json',{\n                    method: 'GET',\n\n                    // body: JSON.stringify({\n                    //     userRating: value\n                    // }),\n                    // headers: {\n                    //     'content-type': 'appLication/json'\n                    // }\n                });\n                if (Response.ok) {\n                    const result = await response.json();\n                    //получаем новый рейтинг\n                    const newRating = result.newRating;\n                    //вывод нового среднего результата\n                    ratingValue.innerHTML = newRating;\n                    //щбрщвление активных звезд\n                    setRatingActiveWidth();\n\n                    rating.classList.remove('rating_sending');\n                } else {\n                    alert(Error);\n\n                    rating.classList.remove('rating_sending');\n                }\n            }\n        }\n    }\n};\n\n// get push set \n// на бекенді отримати та змінити рейтинг\n// взяти клас кнопки  при кліку відкривати мою модалку(сlass=\"rating-btn\")\n// по кліку відправляются данні в бекенді//"],"names":["ratings","document","querySelectorAll","length","initRatings","ratingActive","ratingValue","index","rating","initRatingVars","setRatingActiveWidth","classList","conteins","setRating","ratingItems","ratingItem","setRatingVelue","value","add","fatch","method","Response","ok","result","response","json","newRating","innerHTML","remove","alert","Error","addEventListener","e","dataset","ajax","querySelector","style","width"],"version":3,"file":"index.700d9190.js.map"}