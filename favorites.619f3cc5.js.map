{"mappings":"A,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,Q,S,C,C,C,ECAA,IAAM,EAAO,SAAS,aAAA,CAAc,eAC9B,EAAiB,SAAS,aAAA,CAAc,wBAI9C,EAAe,gBAAA,CAAiB,QAAS,AAAC,IACtC,IAAM,EAAW,EAAE,MAAA,CAAO,aAAA,CAAc,aAAxC,CACM,EAAa,CACf,GAAI,EAAS,EAAb,CACA,KAAM,EAAS,aAAA,CAAc,+BAA+B,WAA5D,CACA,MAAM,EAAS,aAAA,CAAc,8BAA8B,GAA3D,CACA,OAAQ,EAAS,aAAA,CAAc,qCAAqC,WAApE,CACA,YAAa,EAAS,aAAA,CAAc,oCAAoC,WAAxE,AACJ,EAEG,EAAS,SAAA,CAAU,QAAA,CAAS,aAAkB,AAAsB,OAAtB,EAAE,MAAA,CAAO,QAAA,GAAmB,EAAS,YAAA,CAAa,EAAW,IAAjC,EACzE,EAAS,SAAA,CAAU,MAAA,CAAO,aAEvB,EAAS,SAAA,CAAU,QAAA,CAAS,aAEhC,AAAsB,MAAtB,EAAE,MAAA,CAAO,QAAA,GAER,EAAS,SAAA,CAAU,GAAA,CAAI,YAEvB,EAAS,UAAA,CAAW,GAM5B,GA4CA,IAAM,EAAW,IA1CjB,MACE,gBAAiB,CAOf,OALK,aAAa,OAAA,CAAQ,aAGZ,KAAK,KAAA,CAAM,aAAa,OAAA,CAAQ,cAFhC,CAAC,CAKjB,CACA,gBAAiB,CACf,IAAM,EAAY,CAChB,KAAM,EAAK,QAAA,CAAS,IAAA,CAAK,KAAzB,CACA,MAAO,EAAK,QAAA,CAAS,KAAA,CAAM,KAA3B,CACA,MAAO,EAAK,QAAA,CAAS,KAAA,CAAM,KAA3B,AACF,EACA,aAAa,OAAA,CAAQ,YAAa,KAAK,SAAA,CAAU,GACnD,CACA,WAAW,CAAM,CAAE,CACjB,IAAM,EAAU,IAAI,CAAC,SAArB,GACA,EAAQ,IAAA,CAAK,GACb,aAAa,OAAA,CAAQ,UAAW,KAAK,SAAA,CAAU,GACjD,CACA,WAAY,CAOV,OALK,aAAa,OAAA,CAAQ,WAGd,KAAK,KAAA,CAAM,aAAa,OAAA,CAAQ,YAFhC,EAAE,AAKhB,CACA,aAAa,CAAI,CAAE,CACjB,IAAM,EAAU,IAAI,CAAC,SAArB,GACA,EAAQ,OAAA,CAAQ,CAAC,EAAQ,KACnB,IAAS,EAAO,IAAA,EAClB,EAAQ,MAAA,CAAO,EAAO,EAE1B,GACA,aAAa,OAAA,CAAQ,UAAW,KAAK,SAAA,CAAU,GACjD,CACF,EAGA,EAAK,gBAAA,CAAiB,QAAS,IAAM,EAAS,cAA9C,G,G,E","sources":["<anon>","src/js/local-storage.js"],"sourcesContent":["var $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\nparcelRequire.register(\"b5rV1\", function(module, exports) {\nconst $8125d1701b78b442$var$form = document.querySelector(\".modal-form\");\nconst $8125d1701b78b442$var$listForStorage = document.querySelector(\".filter-gallery-list\");\n$8125d1701b78b442$var$listForStorage.addEventListener(\"click\", (e)=>{\n    const cardBody = e.target.parentElement.parentElement;\n    const recipeInfo = {\n        id: cardBody.id,\n        name: cardBody.querySelector(\".filter-gallery-item-tittle\").textContent,\n        image: cardBody.querySelector(\".filter-gallery-item-photo\").src,\n        rating: cardBody.querySelector(\".filter-gallery-item-rating-value\").textContent,\n        description: cardBody.querySelector(\".filter-gallery-item-description\").textContent\n    };\n    if (cardBody.classList.contains(\"favorite\")) {\n        if (e.target.nodeName === \"H3\") {\n            $8125d1701b78b442$var$recipeDB.removeFromDB(recipeInfo.name);\n            cardBody.classList.remove(\"favorite\");\n        }\n    }\n    if (cardBody.classList.contains(\"favorite\")) return;\n    if (e.target.nodeName === \"P\") {\n        cardBody.classList.add(\"favorite\");\n        $8125d1701b78b442$var$recipeDB.saveIntoDB(recipeInfo);\n    }\n});\nclass $8125d1701b78b442$var$RecipeDB {\n    getOrderFromLC() {\n        let orderForm;\n        if (!localStorage.getItem(\"orderForm\")) orderForm = {};\n        else orderForm = JSON.parse(localStorage.getItem(\"orderForm\"));\n        return orderForm;\n    }\n    setOrderFormLC() {\n        const infoOrder = {\n            name: $8125d1701b78b442$var$form.elements.name.value,\n            phone: $8125d1701b78b442$var$form.elements.phone.value,\n            email: $8125d1701b78b442$var$form.elements.email.value\n        };\n        localStorage.setItem(\"orderForm\", JSON.stringify(infoOrder));\n    }\n    saveIntoDB(recipe) {\n        const recipes = this.getFromDB();\n        recipes.push(recipe);\n        localStorage.setItem(\"recipes\", JSON.stringify(recipes));\n    }\n    getFromDB() {\n        let recipes;\n        if (!localStorage.getItem(\"recipes\")) recipes = [];\n        else recipes = JSON.parse(localStorage.getItem(\"recipes\"));\n        return recipes;\n    }\n    removeFromDB(name) {\n        const recipes = this.getFromDB();\n        recipes.forEach((recipe, index)=>{\n            if (name === recipe.name) recipes.splice(index, 1);\n        });\n        localStorage.setItem(\"recipes\", JSON.stringify(recipes));\n    }\n}\nconst $8125d1701b78b442$var$recipeDB = new $8125d1701b78b442$var$RecipeDB();\n$8125d1701b78b442$var$form.addEventListener(\"input\", ()=>$8125d1701b78b442$var$recipeDB.setOrderFormLC());\n\n});\n\n\nparcelRequire(\"b5rV1\");\n\n//# sourceMappingURL=favorites.619f3cc5.js.map\n","const form = document.querySelector('.modal-form');\nconst listForStorage = document.querySelector('.filter-gallery-list');\n\n\n\nlistForStorage.addEventListener('click', (e)=>{\n    const cardBody = e.target.parentElement.parentElement;\n    const recipeInfo = {\n        id: cardBody.id,\n        name: cardBody.querySelector('.filter-gallery-item-tittle').textContent,\n        image:cardBody.querySelector('.filter-gallery-item-photo').src,\n        rating: cardBody.querySelector('.filter-gallery-item-rating-value').textContent,\n        description: cardBody.querySelector('.filter-gallery-item-description').textContent,\n    }\n \n    if(cardBody.classList.contains('favorite')){  if(e.target.nodeName === 'H3'){recipeDB.removeFromDB(recipeInfo.name)\n        cardBody.classList.remove('favorite')}}\n \n        if(cardBody.classList.contains('favorite'))return\n   \n    if(e.target.nodeName === 'P'){\n\n        cardBody.classList.add('favorite')\n   \n        recipeDB.saveIntoDB(recipeInfo);\n\n    }\n \n\n\n});\n\nclass RecipeDB {\n  getOrderFromLC() {\n    let orderForm;\n    if (!localStorage.getItem('orderForm')) {\n      orderForm = {};\n    } else {\n      orderForm = JSON.parse(localStorage.getItem('orderForm'));\n    }\n    return orderForm;\n  }\n  setOrderFormLC() {\n    const infoOrder = {\n      name: form.elements.name.value,\n      phone: form.elements.phone.value,\n      email: form.elements.email.value,\n    };\n    localStorage.setItem('orderForm', JSON.stringify(infoOrder));\n  }\n  saveIntoDB(recipe) {\n    const recipes = this.getFromDB();\n    recipes.push(recipe);\n    localStorage.setItem('recipes', JSON.stringify(recipes));\n  }\n  getFromDB() {\n    let recipes;\n    if (!localStorage.getItem('recipes')) {\n      recipes = [];\n    } else {\n      recipes = JSON.parse(localStorage.getItem('recipes'));\n    }\n    return recipes;\n  }\n  removeFromDB(name) {\n    const recipes = this.getFromDB();\n    recipes.forEach((recipe, index) => {\n      if (name === recipe.name) {\n        recipes.splice(index, 1);\n      }\n    });\n    localStorage.setItem('recipes', JSON.stringify(recipes));\n  }\n}\nconst recipeDB = new RecipeDB();\n\nform.addEventListener('input', () => recipeDB.setOrderFormLC());\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$8125d1701b78b442$var$form","document","querySelector","$8125d1701b78b442$var$listForStorage","addEventListener","e","cardBody","target","parentElement","recipeInfo","name","textContent","image","src","rating","description","classList","contains","nodeName","$8125d1701b78b442$var$recipeDB","removeFromDB","remove","add","saveIntoDB","getOrderFromLC","localStorage","getItem","JSON","parse","setOrderFormLC","infoOrder","elements","value","phone","email","setItem","stringify","recipe","recipes","getFromDB","push","forEach","index","splice"],"version":3,"file":"favorites.619f3cc5.js.map"}